name: Flutter CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Android and iOS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0' # Specify the Flutter version here

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk

      - name: Build iOS
        run: flutter build ios --no-codesign # Use '--no-codesign' flag for CI environment

      # Additional steps like testing, code analysis, etc. can be added here

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/ios/Runner.app

  deploy:
    name: Deploy to GitHub Releases
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-output

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload APK
        id: upload_apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-output/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload iOS build
        id: upload_ios
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-output/Runner.app
          asset_name: Runner.app
          asset_content_type: application/octet-stream
